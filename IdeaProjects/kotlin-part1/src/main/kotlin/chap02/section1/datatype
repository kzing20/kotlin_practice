* 자료형
 - Int: 정수 (1,2,3,...)
 - String: 문자열("Hello123")
 - Float: 실수 (1.2)

* 변수
 - val(value) - 불변형(immutable)
 - var(variable) - 가변형(mutable)

* 변수의 선언
 val username: String = "Kildong"
 선언키워드 변수이름: 자료형 = 값

* 변수 선언 예
 - val username = "Kildong" //자료형을 추론하여 String으로 결정
 - var username //자료형을 지정하지 않은 변수는 사용할 수 없다.
 - val init: Int //사용전 혹은 생성자 시점에서 init변수를 초기화 해야함
 - val number = 10 //number 변수는 Int형으로 추론

 -> 변수 이름은 123abc와 같이 숫자로 시작하면 안 됩니다.
 -> 변수 이름에는 while, if와 같이 코틀린에서 사용되는 키워드는 사용할 수 없습니다.
 -> 변수 이름은 의미 있는 단어를 사용하여 만드는 것이 좋습ㄴ디ㅏ.
 -> 여러 단어를 사용하여 변수 이름을 지을 경우 카멜 표기법(Camel Expression)을 사용하세요.

* 일반 변수,함수명 등 (단봉 낙타와 같은 카멜 표기법)
 - camelCase
 - numberOfBooks
 - myFirstNumber

* 클래스, 인터페이스 등 (쌍봉 낙타 혹은 파스칼 표기법)
 - AnimalCategory
 - CarEngine

 <자료형 알아보기>
* 기본형 (Primitive data type)
 - 가공되지 않은 순수한 자료형으로 프로그래밍 언어에 내장
 - int, long, float, double 등
* 참조형 (Reference type)
 - 동적 공간에 데이터를 둔 다음 이것을 참조하는 자료형
 - Int, Long, Float, Double 등등

 코틀린의 자료형은 참조형 자료형을 사용합니다

 보통 프로그래밍 언어의 자료형은 기본형 자료형과 참조형 자료형으로 구분하며 코틀린은 참조형 자료형을 사용합니다.

  기본형(Primitive Data Type)은 말 그대로 가공되지 않은 순수한 자료형을 말하며 프로그래밍 언어에 내장되어 있습니다.
  참조형(Reference Type)은 객체를 생성하고 동적 공간에 데이터를 둔 다음 이것을 참조하는 자료형을 말합니다.
  자바에서는 int, long, float, double 등 기본형과 String, Date와 같은 참조형을 모두 사용하지만
  코틀린에서는 코딩할 때는 참조형만 사용하며 이것은 다시 코틀린의 성능 최적화에 따라 JVM에 실행하기 위해
  코틀린 컴파일러에서 기본형으로 대체됩니다.